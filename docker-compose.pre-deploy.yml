version: '3.7'
services:
    nginx:
        image: nginx:1.18
        volumes:
            - ./nginx_server/conf.d:/var/nginx/conf.d
            - ./nginx_server/dumy_ssl:/usr/local/nginx/conf:ro
        depends_on: 
            - front_dev
            - socketserver
        links:
            - front_dev
            - socketserver
        ports:
            - 8080:443
        environment:
            SOCKET_SERVER: socketserver:${API_SERVER_PORT}
            FRONT_SERVER: front_dev:80
        command: 
            sh -c '
            rm /etc/nginx/conf.d/* ;
            cp -fr /var/nginx/conf.d /etc/nginx/ ;
            sed -i -e "s/#api_server/socketserver:${API_SERVER_PORT}/" /etc/nginx/conf.d/default.conf;
            cat /etc/nginx/conf.d/default.conf ; nginx -g "daemon off;"'

    socketserver:
        build:
            context: ./backend_socket_server
            dockerfile: Dockerfile
        volumes:
            - ./backend_socket_server/templates:/templates
        environment: 
            CORS_ALLOWED: "*"
            HOST: 0.0.0.0
            PORT: ${API_SERVER_PORT}
            DB_SERVER_URL: "mysql://${DB_USER_NAME}:${DB_USER_PASSWORD}@db:${DB_SQL_PORT}/ase_database"
        expose:
            - ${API_SERVER_PORT}
        depends_on: 
            - db


    front_dev:
        build:
            context: ./frontend
        expose: 
            - 80
    
    db:
        image: mysql:5.7
        container_name: "ase_database"
        environment:
            MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
            MYSQL_DATABASE: ase_database
            MYSQL_USER: ${DB_USER_NAME}
            MYSQL_PASSWORD: ${DB_USER_PASSWORD}
        volumes:
            - database:/var/lib/mysql
            - ./db/conf.d/:/etc/mysql/conf.d/
            - database_log:/var/log/mysql/
        expose:
            - ${DB_SQL_PORT}

    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        environment:
            - PMA_ARBITRARY=1
            - PMA_HOSTS=db
            - PMA_USER=root
            - PMA_PASSWORD=${DB_ROOT_PASSWORD}
        ports:
            - 8081:80

volumes:
    database:
        driver: local

    database_log:
        driver: local